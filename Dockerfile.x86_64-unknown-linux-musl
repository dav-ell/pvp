# Use the cross-rs base image for x86_64-unknown-linux-musl
FROM --platform=linux/amd64 ghcr.io/cross-rs/x86_64-unknown-linux-musl:main

# Update package lists and install dependencies using apt-get
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    clang \
    libclang-dev \
    pkg-config \
    git \
    curl \
    ca-certificates \
    libgtk-3-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    && rm -rf /var/lib/apt/lists/*

# Build musl libc statically
WORKDIR /tmp/musl
RUN curl -L https://musl.libc.org/releases/musl-1.2.5.tar.gz | tar xz --strip-components=1 && \
    ./configure --prefix=/usr/local/musl --disable-shared --enable-static && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/musl

# Build zlib statically
WORKDIR /tmp/zlib
RUN curl -L -o zlib-1.3.1.tar.gz https://www.zlib.net/fossils/zlib-1.3.1.tar.gz && \
    echo "9a93b2b7dfdac77ceba5a558a580e74667dd6fede4585b91eefb60f03b72df63 zlib-1.3.1.tar.gz" | sha256sum -c && \
    tar xzf zlib-1.3.1.tar.gz --strip-components=1 && \
    ./configure --static --prefix=/usr/local && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/zlib

# Build libpng statically
WORKDIR /tmp/libpng
RUN curl -L https://download.sourceforge.net/libpng/libpng-1.6.43.tar.gz | tar xz --strip-components=1 && \
    ./configure --disable-shared --enable-static --prefix=/usr/local && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/libpng

# Build libjpeg-turbo statically
WORKDIR /tmp/libjpeg-turbo
RUN git clone --depth 1 --branch 3.0.3 https://github.com/libjpeg-turbo/libjpeg-turbo.git . && \
    cmake -B build -DCMAKE_BUILD_TYPE=Release -DENABLE_SHARED=OFF -DENABLE_STATIC=ON -DCMAKE_INSTALL_PREFIX=/usr/local && \
    make -C build -j$(nproc) && \
    make -C build install && \
    rm -rf /tmp/libjpeg-turbo

# Build libtiff statically
WORKDIR /tmp/libtiff
RUN curl -L http://download.osgeo.org/libtiff/tiff-4.6.0.tar.gz | tar xz --strip-components=1 && \
    ./configure --disable-shared --enable-static --prefix=/usr/local && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/libtiff

# Build libwebp statically
WORKDIR /tmp/libwebp
RUN git clone --depth 1 --branch v1.4.0 https://github.com/webmproject/libwebp.git . && \
    ./configure --disable-shared --enable-static --prefix=/usr/local && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/libwebp

# Build openjpeg statically
WORKDIR /tmp/openjpeg
RUN git clone --depth 1 --branch v2.5.2 https://github.com/uclouvain/openjpeg.git . && \
    cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr/local && \
    make -C build -j$(nproc) && \
    make -C build install && \
    rm -rf /tmp/openjpeg

# Build TBB statically
WORKDIR /tmp/tbb
RUN git clone --depth 1 --branch v2021.13.0 https://github.com/oneapi-src/oneTBB.git . && \
    cmake -B build -CMAKE_BUILD_TYPE=Release -DTBB_TEST=OFF -DBUILD_SHARED_LIBS=OFF -CMAKE_INSTALL_PREFIX=/usr/local && \
    make -C build -j$(nproc) && \
    make -C build install && \
    rm -rf /tmp/tbb

# Build OpenCV from source with static libraries
WORKDIR /tmp/opencv
RUN git clone --depth 1 --branch 4.8.0 https://github.com/opencv/opencv.git . && \
    mkdir build && cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_SHARED_LIBS=OFF \
          -DWITH_TBB=ON \
          -DWITH_IPP=OFF \
          -DWITH_FFMPEG=ON \
          -DWITH_GTK=ON \
          -DBUILD_opencv_python2=OFF \
          -DBUILD_opencv_python3=OFF \
          -DBUILD_EXAMPLES=OFF \
          -DBUILD_TESTS=OFF \
          -DBUILD_PERF_TESTS=OFF \
          -DOPENCV_GENERATE_PKGCONFIG=ON \
          -DCMAKE_INSTALL_PREFIX=/usr/local/opencv \
          -DZLIB_LIBRARY=/usr/local/lib/libz.a \
          -DZLIB_INCLUDE_DIR=/usr/local/include \
          -DPNG_LIBRARY=/usr/local/lib/libpng.a \
          -DPNG_PNG_INCLUDE_DIR=/usr/local/include \
          -DJPEG_LIBRARY=/usr/local/lib/libjpeg.a \
          -DJPEG_INCLUDE_DIR=/usr/local/include \
          -DTIFF_LIBRARY=/usr/local/lib/libtiff.a \
          -DTIFF_INCLUDE_DIR=/usr/local/include \
          -DWEBP_LIBRARY=/usr/local/lib/libwebp.a \
          -DWEBP_INCLUDE_DIR=/usr/local/include \
          -DOPENJPEG_LIBRARY=/usr/local/lib/libopenjp2.a \
          -DOPENJPEG_INCLUDE_DIR=/usr/local/include/openjpeg-2.5 \
          .. && \
    make -j$(nproc) && \
    make install && \
    cd / && rm -rf /tmp/opencv

# Set environment variables for library paths
ENV ZLIB_LIBRARY=/usr/local/lib/libz.a
ENV PNG_LIBRARY=/usr/local/lib/libpng.a
ENV JPEG_LIBRARY=/usr/local/lib/libjpeg.a
ENV TIFF_LIBRARY=/usr/local/lib/libtiff.a
ENV WEBP_LIBRARY=/usr/local/lib/libwebp.a
ENV OPENJPEG_LIBRARY=/usr/local/lib/libopenjp2.a
ENV TBB_LIBRARY=/usr/local/lib/libtbb.a
ENV MUSL_INCLUDE_PATH=/usr/local/musl/include
ENV MUSL_LINK_PATH=/usr/local/musl/lib
ENV OPENCV_INCLUDE_PATHS=/usr/local/opencv/include/opencv4
ENV OPENCV_LINK_PATHS=/usr/local/opencv/lib
ENV OPENCV_STATIC=1
ENV PKG_CONFIG_PATH=/usr/local/opencv/lib/pkgconfig:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig
ENV LD_LIBRARY_PATH=""
ENV LD_LIBRARY_PATH=/usr/local/opencv/lib:/usr/local/lib:$LD_LIBRARY_PATH

# Set working directory for the build
WORKDIR /usr/src/pvp